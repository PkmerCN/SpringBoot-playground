<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.hzz.mapper.AppUsersMapper">
  <resultMap id="BaseResultMap" type="org.hzz.model.AppUsers">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="cell_phone" jdbcType="VARCHAR" property="cellPhone" />
    <result column="password" jdbcType="VARCHAR" property="password" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from app_users
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.hzz.model.AppUsers">
    insert into app_users (id, username, cell_phone, 
      password)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{cellPhone,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="org.hzz.model.AppUsers">
    update app_users
    set username = #{username,jdbcType=VARCHAR},
      cell_phone = #{cellPhone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, username, cell_phone, password
    from app_users
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, username, cell_phone, password
    from app_users
  </select>
  <resultMap id="BaseResultMap" type="org.hzz.model.AppUsers">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="cell_phone" jdbcType="VARCHAR" property="cellPhone" />
    <result column="password" jdbcType="VARCHAR" property="password" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from app_users
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.hzz.model.AppUsers">
    insert into app_users (id, username, cell_phone, 
      password)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{cellPhone,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="org.hzz.model.AppUsers">
    update app_users
    set username = #{username,jdbcType=VARCHAR},
      cell_phone = #{cellPhone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, username, cell_phone, password
    from app_users
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, username, cell_phone, password
    from app_users
  </select>
  <resultMap id="BaseResultMap" type="org.hzz.model.AppUsers">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="cell_phone" jdbcType="VARCHAR" property="cellPhone" />
    <result column="password" jdbcType="VARCHAR" property="password" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from app_users
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.hzz.model.AppUsers">
    insert into app_users (id, username, cell_phone, 
      password)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{cellPhone,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="org.hzz.model.AppUsers">
    update app_users
    set username = #{username,jdbcType=VARCHAR},
      cell_phone = #{cellPhone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, username, cell_phone, password
    from app_users
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, username, cell_phone, password
    from app_users
  </select>
  <resultMap id="BaseResultMap" type="org.hzz.model.AppUsers">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="cell_phone" jdbcType="VARCHAR" property="cellPhone" />
    <result column="password" jdbcType="VARCHAR" property="password" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from app_users
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.hzz.model.AppUsers">
    insert into app_users (id, username, cell_phone, 
      password)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{cellPhone,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="org.hzz.model.AppUsers">
    update app_users
    set username = #{username,jdbcType=VARCHAR},
      cell_phone = #{cellPhone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, username, cell_phone, password
    from app_users
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, username, cell_phone, password
    from app_users
  </select>
</mapper>